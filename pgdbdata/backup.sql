--
-- PostgreSQL database dump
--

-- Dumped from database version 15.2
-- Dumped by pg_dump version 15.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO postgres;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO postgres;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO postgres;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: authtoken_token; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.authtoken_token (
    key character varying(40) NOT NULL,
    created timestamp with time zone NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.authtoken_token OWNER TO postgres;

--
-- Name: cat_cat; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cat_cat (
    id bigint NOT NULL,
    title character varying(255) NOT NULL,
    content text NOT NULL,
    time_create timestamp with time zone NOT NULL,
    time_update timestamp with time zone NOT NULL,
    is_published boolean NOT NULL,
    user_id integer,
    slug character varying(255) NOT NULL,
    photo character varying(100),
    born_year integer
);


ALTER TABLE public.cat_cat OWNER TO postgres;

--
-- Name: cat_cat_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.cat_cat ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.cat_cat_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add cat	7	add_cat
26	Can change cat	7	change_cat
27	Can delete cat	7	delete_cat
28	Can view cat	7	view_cat
29	Can add category	8	add_category
30	Can change category	8	change_category
31	Can delete category	8	delete_category
32	Can view category	8	view_category
33	Can add Token	9	add_token
34	Can change Token	9	change_token
35	Can delete Token	9	delete_token
36	Can view Token	9	view_token
37	Can add Token	10	add_tokenproxy
38	Can change Token	10	change_tokenproxy
39	Can delete Token	10	delete_tokenproxy
40	Can view Token	10	view_tokenproxy
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
6	pbkdf2_sha256$720000$C2bEg57CVGxgt3C62zqIx3$0R1Owlyw9yEngufIcCf5xVRPdHeN+vAC/4ruL4W1ICk=	\N	f	anna			chasovskihanya@gmail.com	f	f	2024-05-09 11:23:10.111192+03
2	pbkdf2_sha256$720000$5VZq09xbHH9hH4sZdeG2U2$BVnljuNyqpfMZM9bbtyjg5OxQSR1HHZZIW62cCptafY=	2024-05-07 23:08:05.750199+03	f	pupunya			pupupu@gmail.com	f	t	2024-05-07 22:58:44.652543+03
3	pbkdf2_sha256$720000$oJDJJJJqJbukqS7inVX7fF$KWnxAl/tSucGdodrHadWnXUXJSCbxL/QKWhstsBI2zE=	\N	f	lalula				f	t	2024-05-08 17:45:56.624449+03
4	pbkdf2_sha256$720000$aMqYncH9sd7kTeaOoprPtQ$0hXY7ED3cCbb5QkNQaqbaWqhNdrCIoZotXtjFDg9mTM=	2024-05-09 11:55:01.775141+03	f	12345678				f	t	2024-05-08 21:13:09.726563+03
1	pbkdf2_sha256$720000$3xyi9hEzzACoJnxtmn02Kf$ciDLZNZIso3D2+o/Dj4rCEn0EF1RQteY5eIFkOAb55U=	2024-05-12 12:34:07.722149+03	t	admin			admnall@yandex.ru	t	t	2024-04-30 20:50:25.478428+03
5	pbkdf2_sha256$720000$oASBBGqY41OgJzlFj8ZkxW$WtjejqHiGJcgiJmlK1OgkjqEDtpjBB7TpDESo4ml864=	\N	f	1234567				f	t	2024-05-09 01:39:08.15241+03
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: authtoken_token; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.authtoken_token (key, created, user_id) FROM stdin;
dc0f9b4b949c2c720ec0b3abdbbb140a96f1f1f0	2024-05-11 18:31:15.397579+03	1
\.


--
-- Data for Name: cat_cat; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.cat_cat (id, title, content, time_create, time_update, is_published, user_id, slug, photo, born_year) FROM stdin;
29	Dancing Cat	Черно-белая пушистая кошка танцует под песню Girlfriend Аврил Лавин. Она хлопает лапками, поднимает их по очереди вверх, а еще весело трясет животом.\r\nОригинальное видео опубликовали в китайской версии «Тиктока» — Douyin — в октябре 2023 года. На нем кошка лежала на коленях хозяйки, а та управляла ее лапами так, словно животное танцует.\r\nУже через месяц видео стало вирусным в мировом «Тиктоке», и танцующая кошка обзавелась собственным шаблоном. Первым популярным тиктоком с ним стал ролик о приеме душа после отмены занятий в колледже.\r\nИспользуется в качестве реакции на какое-то удачное стечение обстоятельств, приятную ситуацию, которая буквально заставляет танцевать от радости.	2024-05-01 19:53:35.692093+03	2024-05-01 19:53:35.692093+03	t	1	dancing-cat	cat_photos/2024/05/dancing-cat-admin.gif	2023
30	Vibing Cat	Белый кот ритмичной качает головой — будто в такт песне.\r\nОригинальное видео выложили в «Тикток» в апреле 2020 года. Владелец кошки признавался: она качает головой не сама, ее направляет хозяин. Просто его не видно в кадре. Ролик стал популярен благодаря стримерам, которые часто включали его на «Твиче».\r\nИногда кота можно встретить в связке с турецким уличным музыкантом Билалом Герегеном, который играет на барабанах песню Ievan Polkka. Барабанщик сам выложил такое видео в 2020 году.\r\nКот хорошего настроения: если у вас все хорошо или включена отличная музыка, под которую можно «вайбить», то этот мем для вас.	2024-05-01 19:55:04.569234+03	2024-05-01 19:55:04.569234+03	t	1	vibing-cat	cat_photos/2024/05/vibing-cat-admin.gif	2023
31	Спорящие коты	Рыжий и серый кот о чем-то эмоционально спорят друг с другом. Их мяуканье интонационно очень похоже на человеческую речь.\r\nОба кота живут в Китае, но в реальности они не знакомы друг с другом. Владельцы рыжего выкладывают видео с ним в аккаунте RemoRinoCat. Оригинальный ролик, где кот возмущенно мяукает, они выложили в феврале 2023 года.\r\nВторую кошку зовут Guangdang. Мемное видео загрузили в «Тикток» в середине 2023. На нем она пришла к хозяйке в кровать и, мяукая, просила дать ей еды.\r\nМемом иллюстрируют спорные ситуации, которые возникают между людьми. Часто его используют, чтобы показать какие-то сложности в отношениях: когда один кот недоуменно задает вопросы, а второй отнекивается.	2024-05-01 19:56:31.304771+03	2024-05-01 19:56:31.305849+03	t	1	sporjaschie-koty	cat_photos/2024/05/sporjaschie-koty-admin.gif	2023
39	Кот Максвелл	Черно-белый кот крутится вокруг своей оси или танцует под заедающую мелодию The Funky Russian Train. Иногда его сопровождает капибара.\r\nОригинальное фото в 2017 году выложил пользователь фотохостинга Imgur. На самом деле это не кот, а кошка по имени Джесс. На первом снимке она сидела на листе бумаги с надписью «Не сгибать».\r\nСпустя три года в «Стим» загрузили 3D-модель Джесс для игры Garry’s Mod, а затем немного переделали и назвали «Максвелл, носибельный кот». Так фигурка стала вирусной: про кота сняли ролик на «Ютубе» и добавили в фильтр в «Тиктоке». Сначала ролики посвящали исключительно коту Максвеллу, но потом он стал появляться в видео с Happy Cat и Crying Banana Cat.\r\nЧаще всего кот Максвелл крутится либо от радости, либо от нетерпения.	2024-05-01 20:08:42.303041+03	2024-05-01 20:08:42.303041+03	t	1	kot-maksvell	cat_photos/2024/05/kot-maksvell-admin.gif	2022
40	Мокрый кот	Мокрый серый кот пристально смотрит в камеру\r\nОригинал неизвестен. На полном видео кот находится либо в ванной, либо в душе, а сверху его поливают водой. Обычно видео с ним сопровождается трагичной музыкой.\r\nМем подходит к ситуациям, когда человек расстроен или устал — настолько сильно, что это сравнимо с ушатом вылитой на него воды.	2024-05-01 20:09:38.043424+03	2024-05-01 20:09:38.043424+03	t	1	mokryj-kot	cat_photos/2024/05/mokryj-kot-admin.gif	2023
25	Грустный кот-банан	Кот в костюме банана грустит и плачет, когда попадает в неприятности.\r\nОригинальное изображение создал пользователь Sin Achilles: он выложил картинку с разными кошками, одетыми в костюмы бананов. Один из котов в марте 2023 года попал в ролик с китайским чили — и завирусился.\r\nПлачущий кот понравился интернету: его стали представлять депрессивным другом Happy-кота. Иногда животному добавляют озвучку кота из мема a sad cat singing, который грустно и надрывно поет. Так ролики становятся более драматичными.\r\nКот-банан — олицетворение грусти, он практически никогда не бывает веселым. Он подходит для иллюстрации печальных событий жизни.	2024-05-01 19:39:27.007424+03	2024-05-01 19:44:08.3715+03	t	1	grustnyj-kot-banan	cat_photos/2024/05/grustnyj-kot-banan-admin.gif	2023
22	Huh?	Черно-белый кот кивает головой и как бы с непониманием три раза спрашивает: «А?» — или «Huh?».\r\nКота зовут Бендер, он живет в Австралии. У животного есть свой аккаунт в «Тиктоке», который ведет его хозяйка. Мемное видео, на котором кот требовательно мяукает у тарелки с едой, женщина загрузила в сентябре 2021 года. Тогда ролик не стал популярным, но в феврале 2022 к нему добавили звук «А?».\r\nТеперь кот не просто требовал еду, а удивленно спрашивал: «А?». Что отлично описывало множество жизненных ситуаций. Мем стал вирусным весной 2023 года. На видео Бендер недоумевал из-за чего-либо один или в паре с другими животными — например, козлом.\r\nВидео с Бендером иллюстрируют ситуации, когда человек чувствует растерянность и непонимание. Например, беседует с иностранцем, не говоря на его языке.	2024-05-01 19:17:39.695216+03	2024-05-01 19:17:39.695216+03	t	1	huh	cat_photos/2024/05/huh-admin.gif	2023
23	Мистер Фреш	Бродячий кот, который прославился в соцсетях благодаря приложению Hello Street Cat.\r\nВ приложении ведётся круглосуточная трансляция из будок с кормом для бродячих котов. Каждый пользователь может отправить донат и посмотреть, как питомцы едят.\r\nМистер Фреш — привередливый кот, который ест только свежую (fresh — отсюда и кличка) еду, которую дают ему фанаты. На видео он сидит перед кормом и грустно ждёт, пока не появится свежий.\r\nУ Мистера Фреша образовалась целая фанбаза. Поклонники посвящают коту рисунки, эдиты и делают с ним мемы.\r\nМистер Фреш — тот, кто ждет чего-то лучшего от жизни и проявляет терпение. Что-то подвернулось? Нет? Я еще потерплю.	2024-05-01 19:31:22.870068+03	2024-05-01 19:31:22.870068+03	t	1	mister-fresh	cat_photos/2024/05/mister-fresh-admin.gif	2024
24	Happy Happy Happy Cat	Кот Happy прыгает на задних лапах и машет передними под песню My Happy Song.\r\nМем завирусился весной 2022 года: соцсети наполнились роликами с животным, танцующим под разные мелодии.\r\nПри этом оригинальный ролик загрузили на «Ютуб» еще в ноябре 2015 года. На нем кот «просится», чтобы ему открыли стеклянную дверь, и прыгает на нее лапами. Видео набрало более пяти миллионов просмотров, но автор его удалил.\r\nРоликом с прыгающим котом иллюстрируют радостные события — хорошие новости, внезапное счастье или просто удачный поворот в жизни.	2024-05-01 19:35:34.478143+03	2024-05-01 19:35:34.478143+03	t	1	happy-happy-happy-cat	cat_photos/2024/05/happy-happy-happy-cat-admin.gif	2022
26	Crunchy cat	Бело-коричневая кошка сосредоточенно и заразительно хрустит кормом.\r\nЕе зовут Луна — она популярна в «Тиктоке». Хозяева животного выкладывают видео, на которых она хрустит кормом. Один из таких роликов завирусился в конце 2023 года: пользователи стали делать мемы, в которых Луна хрустит сухариками или конфетами.\r\nВидео с кошкой используют, чтобы рассказать о любимых хрустящих сладостях. Луна в них становится символом удовольствия от еды, которая очень нравится.	2024-05-01 19:41:52.025499+03	2024-05-01 19:43:51.642864+03	t	1	crunchy-cat	cat_photos/2024/05/crunchy-cat-admin.gif	2023
27	Уставший кот	Темно-серый кот лежит на спине с высунутым языком и постепенно закрывающимися глазами.\r\nВ сети кота называют Club cat или Sleep cat. Одно из первых вирусных видео с оригинальной картинкой в «Тикток» выложили в конце 2023 года. Что это за животное и как его зовут, к сожалению, неизвестно.\r\nРолики обычно сопровождает трек от Aphex Twin.\r\nКот иллюстрирует ощущение усталости, перегруженности или временно «потери ума». Хорошо подходит к ситуациям, когда так сильно устал, что «завис» или проснулся утром и ничего не понимаешь.	2024-05-01 19:51:20.310718+03	2024-05-01 19:51:20.310718+03	t	1	ustavshij-kot	cat_photos/2024/05/ustavshij-kot-admin.gif	2023
28	Голодный кот	Бело-рыжий кот стучит пустой миской по полу, требуя еды.\r\nКота зовут Персик, стучать миской в ожидании еды — привычное для него занятие. Оригинальное видео выложила его хозяйка весной 2023 года: на нем Персик требует еды, пока она готовит себе завтрак.\r\nТаким котом иллюстрируют моменты, когда чего-то ждешь, но пока не получаешь. А очень хочется. понимаешь.	2024-05-01 19:52:11.154764+03	2024-05-01 19:52:11.154764+03	t	1	golodnyj-kot	cat_photos/2024/05/golodnyj-kot-admin.gif	2023
32	Дерущийся кот	Рыжий кот бьет лапой рыже-белого кота.\r\nВидео стало вирусным в ноябре 2023 года, но кто его загрузил, неизвестно. На полном ролике рыжий кот сидит на белом диване и бьет лапой рыже-белого кота, лежащего на столе. Тот долго терпит, но в конце ролика все-таки бросается на обидчика.\r\nПодходит к ситуациям, когда злишься на кого-то так сильно, что хочешь постучать по нему.	2024-05-01 19:57:18.951549+03	2024-05-01 19:57:18.951549+03	t	1	deruschijsja-kot	cat_photos/2024/05/deruschijsja-kot-admin.gif	2023
33	Кот за рулем	Бело-серый кот сидит на водительском кресле автомобиля и поворачивает руль. У животного очень деловитый вид: он смотрит вокруг так, словно действительно управляет машиной.\r\nКота зовут Луи. Его хозяйка опубликовала видео в феврале 2023 года. На нем кот сидит у нее на коленях, когда она управляет автомобилем. Ролик не набрал много просмотров, но его репосты стали вирусными.\r\nВ августе в «Тиктоке» стал популярен зеленый шаблон с котом. Одним из первых стало видео, где поездку животного сопроводили подписью: «Мой парень везет меня за наггетсами после того, как я кричала и плакала из-за любого неудобства, но он знал, что я просто хочу есть».\r\nПесня, которая чаще всего используется в связке с мемом - MO3 & OG Bobby Billions — Outside (Better Days).\r\nВидео иллюстрируют моменты, когда либо один герой сохраняет невозмутимость в какой-то необычной для себя ситуации, либо когда он помогает решить проблему кому-то еще — кого нет в кадре.	2024-05-01 19:59:37.619431+03	2024-05-01 19:59:37.619431+03	t	1	kot-za-rulem	cat_photos/2024/05/kot-za-rulem-admin.gif	2023
34	Кот вне зоны доступа	Черный кот рассеянно смотрит на другого кота. Со стороны кажется, что он витает в своих мыслях во время диалога.\r\nОригинальное видео выложили в «Тиктоке» в марте 2023 года. На нем коты сначала смотрят друг на друга, а потом начинают драться. В апреле к ролику добавили вирусный звук — aqustic ambience, который отлично иллюстрирует возникающую в голове тишину.\r\nЧерным котом иллюстрируют ситуации, когда человек отключается от разговора и перестает слушать собеседников. Это может быть связано с тем, что ему неинтересно или он увлекся какой-то своей мыслью.\r\nИногда мем используют в ситуациях, когда один оппонент слушает, как другой несет полную чушь, но не хочет с ним спорить.	2024-05-01 20:01:06.304424+03	2024-05-01 20:01:06.304424+03	t	1	kot-vne-zony-dostupa	cat_photos/2024/05/kot-vne-zony-dostupa-admin.gif	2023
35	Dramatic Kitten	Серый котенок держится лапами за голову, качает ей из стороны в сторону и истошно кричит. Кажется, будто у него болит голова.\r\nТочно неизвестно, кто автор ролика и что произошло с котенком, но на оригинальном видео он лежит на ладони человека и простыне. Видео стало вирусным в «Тиктоке» в конце 2021 года. Им пользователи иллюстрировали сложные ситуации, в которых им пришлось оказаться.\r\nКотенок стал символом беспомощности и отчаяния, когда какое-то дело сильно надоело и так давит, что остается только кричать. Также можно использовать, если вам очень грустно.	2024-05-01 20:02:09.816776+03	2024-05-01 20:02:09.816776+03	t	1	dramatic-kitten	cat_photos/2024/05/dramatic-kitten-admin.gif	2021
36	Кот с пилочкой для ногтей	Черный кот подпиливает ногти человеческой пилочкой для ногтей.\r\n Видео и гифки с черным котом можно встретить уже несколько лет: в «Твиттере» анимацию выложили еще в 2015 году. Что это за животное, неизвестно. Многие пользователи называют кота Салемом — героем сериала «Сабрина маленькая ведьма».\r\nМемом помогает выразить чувство превосходства и уверенности в своем внешнем виде или способностях. Особенно он уместен в качестве реакции на демонстрацию своих талантов от других людей.	2024-05-01 20:04:39.112923+03	2024-05-01 20:04:39.112923+03	t	1	kot-s-pilochkoj-dlja-nogtej	cat_photos/2024/05/kot-s-pilochkoj-dlja-nogtej-admin.gif	2021
37	Тошнящий кот	Белый кот, который борется со рвотными позывами. Он высовывает язык и таращит глаза.\r\nВидео опубликовали в сентябре 2021 года в «Тиктоке». На оригинальном ролике коту дают понюхать сметану или йогурт, но она не нравится животному до такой степени, что у него возникают рвотные позывы.\r\nТак описывают реакцию на неприятные жизненные ситуации, от которых буквально тошнит.	2024-05-01 20:05:40.615701+03	2024-05-01 20:05:40.615701+03	t	1	toshnjaschij-kot	cat_photos/2024/05/toshnjaschij-kot-admin.gif	2021
38	Тектоник-кот	Кот стоит и на задних лапах и выполняет движения из электродэнса, известного в России как тектоник.\r\nВ начале 2023 года в Китае получил огромную популярность вирусный танец «Кемусан». Местный блогер станцевал так на свадьбе друга, видео попало в китайскую версию «Тиктока» Douyin, и пользователи принялись за ним повторять. К февралю «Кемусан» исполняли уже целыми школами и компаниями.\r\nКоты затанцевали благодаря приложению Tongyi — это нейросеть в стиле ChatGPT, только с большим количеством функций и от Alibaba. Там появился режим, позволяющий анимировать любое фото и добавить герою снимка движения из танца «Кемусан». Один из ИИ-котов в итоге попал из Китая в мировой интернет.\r\nВ России кот демонстрирует самый разный спектр эмоций — и танцует не под «клубняк», а под шансон.	2024-05-01 20:07:03.255234+03	2024-05-01 20:07:03.255234+03	t	1	tektonik-kot	cat_photos/2024/05/tektonik-kot-admin.gif	2023
41	Pop cat	Белый кот смешно открывает рот, издавая звук «Буп».\r\nНа оригинальном видео изображен кот Овсянка пользователя «Твиттера» XavierBFB. В октябре 2020 года он опубликовал два снимка питомца — обычный и с прифотошопленным огромным открытым ртом. Затем его друг выложил подобную гифку на «Реддит»: там она осталась незамеченной, но неожиданно завирусилась в «Твиттере».\r\nЧаще всего мемом иллюстрируют какую-то речь, выражают нетерпение или просто заявляют об ожидании чего-то.	2024-05-01 20:10:34.488376+03	2024-05-01 20:10:34.488376+03	t	1	pop-cat	cat_photos/2024/05/pop-cat-admin.gif	2021
42	Сердитый кот	Серая кошка сидит с очень сердитым выражением морды.\r\nКошку зовут Барбара, она стала популярна еще в 2020 году. На самом деле животное ничем не рассерженно, у него просто такое выражение морды. Ролик, который стал мемом, хозяйка кошки выложила летом 2023 года: на нем Барбара просто сидит между ног девушки.\r\nGrumpy cat (так еще называют кошку) отлично подходит для выражения всех сердитых эмоций — особенно тех, которые не хочется выражать словами.	2024-05-01 20:11:56.611438+03	2024-05-01 20:11:56.611438+03	t	1	serdityj-kot	cat_photos/2024/05/serdityj-kot-admin.gif	2023
43	Заголовок	Описание	2024-05-09 04:20:40.028772+03	2024-05-09 04:20:40.028772+03	f	1	zagolovok	cat_photos/2024/05/zagolovok-admin.jfif	2
44	12345	hgfd	2024-05-09 11:14:04.451588+03	2024-05-09 11:14:04.451588+03	f	1		cat_photos/2024/05/-admin.png	3333
45	128 cat	128 cat	2024-05-09 11:55:40.620681+03	2024-05-09 11:55:40.620681+03	f	4	-cat	cat_photos/2024/05/-cat-12345678.jfif	123
46	876543	вввввввва	2024-05-09 11:57:07.578231+03	2024-05-09 11:57:07.578231+03	f	4	876543	cat_photos/2024/05/876543-12345678.jfif	765
47	fgsss	shfg	2024-05-10 04:40:21.229515+03	2024-05-10 04:40:21.229515+03	f	1	fgsss	cat_photos/2024/05/fgsss-admin.jpg	3412
48	bfds	fbsn	2024-05-10 04:47:44.108044+03	2024-05-10 04:47:44.108044+03	f	1	bfds	cat_photos/2024/05/bfds-admin.jpg	5555
49	татытыыыыы	ывпиыпиыи	2024-05-10 04:49:43.749566+03	2024-05-10 04:49:43.749579+03	f	1	tatytyyyyy	cat_photos/2024/05/tatytyyyyy-admin.jpg	2425
50	иаяпви	таыЯвт	2024-05-10 04:55:43.611629+03	2024-05-10 04:55:43.612669+03	f	1	iajapvi	cat_photos/2024/05/iajapvi-admin.png	55
52	ghhgfxh	hfhxh	2024-05-10 14:05:44.00184+03	2024-05-10 14:05:44.00184+03	f	1	ghhgfxh	cat_photos/2024/05/ghhgfxh-admin.png	44545
53	GGGGGGGGgggggggggggdGDFg	SDGgggggggggggggasgSeg	2024-05-10 14:46:54.211796+03	2024-05-10 14:46:54.211796+03	f	1	gggggggggggggggggggdgdfg	cat_photos/2024/05/gggggggggggggggggggdgdfg-admin.png	34235562
54	Тест1	Тест1	2024-05-10 19:05:18.813508+03	2024-05-10 19:05:18.813508+03	f	1	test1	cat_photos/2024/05/test1-admin.png	2024
51	цепvbnvb	пимир	2024-05-10 05:11:28.818188+03	2024-05-12 14:49:05.620516+03	f	1	tsep	cat_photos/2024/05/tsep-admin.png	6556
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2024-04-30 20:54:28.781865+03	1	Тестовая категория	1	[{"added": {}}]	8	1
2	2024-04-30 20:54:44.524963+03	1	Кот	1	[{"added": {}}]	7	1
3	2024-05-01 19:10:10.16723+03	16	dggd	3		7	1
4	2024-05-01 19:10:10.190246+03	15	test	3		7	1
5	2024-05-01 19:10:10.191213+03	17	ААААААА 10ЫЙ ТЕСТ БЛН	3		7	1
6	2024-05-01 19:10:10.193195+03	11	АААААААААААААКОТ КАПСОМ	3		7	1
7	2024-05-01 19:10:10.194285+03	1	Кот	3		7	1
8	2024-05-01 19:10:10.196235+03	18	Кот дебильчик	3		7	1
9	2024-05-01 19:10:10.199233+03	13	Кот для проверки загрузки имени фотографии	3		7	1
10	2024-05-01 19:10:10.200194+03	10	Кот для проверки загрузки фотографий	3		7	1
11	2024-05-01 19:10:10.201194+03	2	Кот Рома	3		7	1
12	2024-05-01 19:10:10.202196+03	21	льльльльл	3		7	1
13	2024-05-01 19:10:10.203194+03	7	невероятный кот	3		7	1
14	2024-05-01 19:10:10.204212+03	5	О боже мой кот	3		7	1
15	2024-05-01 19:10:10.206236+03	4	Реактивный кот	3		7	1
16	2024-05-01 19:10:10.20723+03	9	Кот для проверки загрузки фотографий	3		7	1
17	2024-05-01 19:10:10.208232+03	8	кот проверка слагов	3		7	1
18	2024-05-01 19:10:10.209194+03	6	невероятный кот	3		7	1
19	2024-05-12 14:49:05.631106+03	51	цепvbnvb	2	[{"changed": {"fields": ["Title"]}}]	7	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	cat	cat
8	cat	category
9	authtoken	token
10	authtoken	tokenproxy
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2024-04-30 20:34:55.699214+03
2	auth	0001_initial	2024-04-30 20:34:55.79813+03
3	admin	0001_initial	2024-04-30 20:34:55.823145+03
4	admin	0002_logentry_remove_auto_add	2024-04-30 20:34:55.828128+03
5	admin	0003_logentry_add_action_flag_choices	2024-04-30 20:34:55.833128+03
6	contenttypes	0002_remove_content_type_name	2024-04-30 20:34:55.845129+03
7	auth	0002_alter_permission_name_max_length	2024-04-30 20:34:55.85213+03
8	auth	0003_alter_user_email_max_length	2024-04-30 20:34:55.859129+03
9	auth	0004_alter_user_username_opts	2024-04-30 20:34:55.863128+03
10	auth	0005_alter_user_last_login_null	2024-04-30 20:34:55.869132+03
11	auth	0006_require_contenttypes_0002	2024-04-30 20:34:55.87113+03
12	auth	0007_alter_validators_add_error_messages	2024-04-30 20:34:55.875223+03
13	auth	0008_alter_user_username_max_length	2024-04-30 20:34:55.893129+03
14	auth	0009_alter_user_last_name_max_length	2024-04-30 20:34:55.899129+03
15	auth	0010_alter_group_name_max_length	2024-04-30 20:34:55.90641+03
16	auth	0011_update_proxy_permissions	2024-04-30 20:34:55.90641+03
17	auth	0012_alter_user_first_name_max_length	2024-04-30 20:34:55.90641+03
18	sessions	0001_initial	2024-04-30 20:34:55.922042+03
19	cat	0001_initial	2024-04-30 20:41:00.060687+03
20	cat	0002_cat_user	2024-04-30 21:08:26.387008+03
21	cat	0003_cat_slug	2024-05-01 11:36:48.767805+03
22	cat	0004_alter_cat_slug	2024-05-01 11:36:48.825562+03
23	cat	0005_alter_cat_slug	2024-05-01 11:54:46.534442+03
24	cat	0006_cat_photo	2024-05-01 12:26:38.983067+03
25	cat	0007_alter_cat_options_cat_born_year_alter_cat_photo	2024-05-01 19:13:32.334752+03
26	authtoken	0001_initial	2024-05-05 16:10:17.154256+03
27	authtoken	0002_auto_20160226_1747	2024-05-05 16:10:17.174902+03
28	authtoken	0003_tokenproxy	2024-05-05 16:10:17.17751+03
29	authtoken	0004_alter_tokenproxy_options	2024-05-05 16:10:17.1805+03
30	cat	0008_remove_cat_category_delete_category	2024-05-09 18:26:07.194619+03
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
ly7cs6pi4lozycl4jx56jsqolz1dhbu1	.eJxVjEEOwiAQRe_C2hAQhw4u3fcMBJhBqgaS0q6Md9eaLnT733v_KXxYl-LXzrOfSJyFFoffLYZ057oBuoV6bTK1usxTlJsid9rl2Igfl939Oyihl0-dNZycG7RCl1RWGQkRCCwZi1oTIOCREQCNg4Gd_XJFlDJHZTKK1xuxiTbz:1s4zkI:zMnkvBaKfpOMUC6XaxKS8uXg1hS8CYW9DpmsB032AKo	2024-05-23 12:07:22.507986+03
ulkh3x0v87n76fv6zgw2bj19kd6qssqo	.eJxVjEEOwiAQRe_C2hAQhw4u3fcMBJhBqgaS0q6Md9eaLnT733v_KXxYl-LXzrOfSJyFFoffLYZ057oBuoV6bTK1usxTlJsid9rl2Igfl939Oyihl0-dNZycG7RCl1RWGQkRCCwZi1oTIOCREQCNg4Gd_XJFlDJHZTKK1xuxiTbz:1s53Xf:yhe-Up8L0ZaMxQz6SU7Zf1iTX2Z7KAeCXbyfbP3Kmcc	2024-05-23 16:10:35.634896+03
4urb0evi3y2gitfwgizkavlij9zhfr7v	.eJxVjEEOwiAQRe_C2hAQhw4u3fcMBJhBqgaS0q6Md9eaLnT733v_KXxYl-LXzrOfSJyFFoffLYZ057oBuoV6bTK1usxTlJsid9rl2Igfl939Oyihl0-dNZycG7RCl1RWGQkRCCwZi1oTIOCREQCNg4Gd_XJFlDJHZTKK1xuxiTbz:1s5FLJ:7OlRXjYWcy596e_GNkRHL8NEieIFVQSzAMrNuDkpxWM	2024-05-24 04:46:37.077059+03
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 40, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 6, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: cat_cat_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.cat_cat_id_seq', 54, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 19, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 10, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 30, true);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: authtoken_token authtoken_token_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.authtoken_token
    ADD CONSTRAINT authtoken_token_pkey PRIMARY KEY (key);


--
-- Name: authtoken_token authtoken_token_user_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.authtoken_token
    ADD CONSTRAINT authtoken_token_user_id_key UNIQUE (user_id);


--
-- Name: cat_cat cat_cat_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cat_cat
    ADD CONSTRAINT cat_cat_pkey PRIMARY KEY (id);


--
-- Name: cat_cat cat_cat_slug_2cf7c7e6_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cat_cat
    ADD CONSTRAINT cat_cat_slug_2cf7c7e6_uniq UNIQUE (slug);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: authtoken_token_key_10f0b77e_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX authtoken_token_key_10f0b77e_like ON public.authtoken_token USING btree (key varchar_pattern_ops);


--
-- Name: cat_cat_slug_2cf7c7e6_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cat_cat_slug_2cf7c7e6_like ON public.cat_cat USING btree (slug varchar_pattern_ops);


--
-- Name: cat_cat_user_id_6a4cc2c1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cat_cat_user_id_6a4cc2c1 ON public.cat_cat USING btree (user_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: authtoken_token authtoken_token_user_id_35299eff_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.authtoken_token
    ADD CONSTRAINT authtoken_token_user_id_35299eff_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cat_cat cat_cat_user_id_6a4cc2c1_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cat_cat
    ADD CONSTRAINT cat_cat_user_id_6a4cc2c1_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

